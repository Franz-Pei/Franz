package com.dxfx.client;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.alibaba.fastjson2.JSONObject;
import com.dxfx.client.annotation.RemoteInvoke;
import com.dxfx.client.param.Response;
import com.dxfx.user.bean.User;
import com.dxfx.user.remote.UserRemote;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes=RemoteInvokingTest.class)
@ComponentScan("com.dxfx")
public class RemoteInvokingTest {

    @RemoteInvoke
    private UserRemote userRemote;

    @Test
    public void testSaveUser() {
        User u = new User();
        u.setId(1);
        u.setName("张三");

        // 如果userRemote为null，说明注入还没完成，这是正常的
        if (userRemote != null) {
            Response response = userRemote.saveUser(u);
            System.out.println(JSONObject.toJSONString(response,));
            System.out.println("保存用户结果: " + response.getMeg()); // 使用getMeg()
        } else {
            System.out.println("UserRemote注入为null，需要配置代理");
        }
        
    }

    @Test
    public void testSaveUsers() {
        List<User> users = new ArrayList<User>();
        User u = new User();
        u.setId(1);
        u.setName("张三");
        users.add(u);

        if (userRemote != null) {
            Response response = userRemote.saveUsers(users);
            System.out.println("批量保存用户结果: " + response.getMeg()); // 使用getMeg()
        } else {
            System.out.println("UserRemote注入为null，需要配置代理");
        }
    }

    @Test
    public void testSpringContext() {
        System.out.println("Spring上下文加载成功！");
        assert true;
    }
}