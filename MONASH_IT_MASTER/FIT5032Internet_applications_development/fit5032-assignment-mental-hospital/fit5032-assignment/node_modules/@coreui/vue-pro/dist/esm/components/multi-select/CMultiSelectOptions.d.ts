import { PropType, VNode } from 'vue';
import type { Option, OptionsGroup } from './types';
declare const CMultiSelectOptions: import("vue").DefineComponent<{
    loading: BooleanConstructor;
    options: {
        type: PropType<(Option | OptionsGroup)[]>;
        default: () => never[];
    };
    optionsMaxHeight: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    optionsStyle: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    scopedSlots: ObjectConstructor;
    searchNoResultsLabel: {
        type: StringConstructor;
        default: string;
    };
    selected: {
        type: PropType<Option[]>;
        default: () => never[];
    };
    virtualScroller: BooleanConstructor;
    visibleItems: {
        type: NumberConstructor;
        default: number;
    };
}, () => (false | VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>)[], unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "optionClick"[], "optionClick", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    loading: BooleanConstructor;
    options: {
        type: PropType<(Option | OptionsGroup)[]>;
        default: () => never[];
    };
    optionsMaxHeight: {
        type: (NumberConstructor | StringConstructor)[];
        default: string;
    };
    optionsStyle: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    scopedSlots: ObjectConstructor;
    searchNoResultsLabel: {
        type: StringConstructor;
        default: string;
    };
    selected: {
        type: PropType<Option[]>;
        default: () => never[];
    };
    virtualScroller: BooleanConstructor;
    visibleItems: {
        type: NumberConstructor;
        default: number;
    };
}>> & {
    onOptionClick?: ((...args: any[]) => any) | undefined;
}, {
    options: (Option | OptionsGroup)[];
    selected: Option[];
    loading: boolean;
    visibleItems: number;
    optionsMaxHeight: string | number;
    optionsStyle: string;
    searchNoResultsLabel: string;
    virtualScroller: boolean;
}, {}>;
export { CMultiSelectOptions };
