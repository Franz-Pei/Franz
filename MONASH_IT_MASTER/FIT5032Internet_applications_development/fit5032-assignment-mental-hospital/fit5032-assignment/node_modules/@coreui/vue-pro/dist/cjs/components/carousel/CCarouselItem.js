'use strict';

var vue = require('vue');

const CCarouselItem = vue.defineComponent({
    name: 'CCarouselItem',
    props: {
        /**
         * @ignore
         */
        active: {
            type: Boolean,
            default: false,
        },
        /**
         * @ignore
         */
        direction: {
            type: String,
            default: 'next',
        },
        /**
         * The amount of time to delay between automatically cycling an item.
         */
        interval: {
            type: [Boolean, Number],
            default: false,
        },
    },
    setup(props, { slots }) {
        const carouselItemRef = vue.ref();
        const { active } = vue.toRefs(props);
        const directionClassName = vue.ref();
        const orderClassName = vue.ref();
        const activeClassName = vue.ref(active.value && 'active');
        // eslint-disable-next-line no-unused-vars
        const setAnimating = vue.inject('setAnimating');
        // eslint-disable-next-line no-unused-vars
        const setCustomInterval = vue.inject('setCustomInterval');
        vue.watch(active, (active, prevActive) => {
            active && setCustomInterval(props.interval);
            if (!prevActive && active) {
                orderClassName.value = `carousel-item-${props.direction}`;
                setCustomInterval(props.interval);
            }
            setTimeout(() => {
                if (prevActive && !active) {
                    activeClassName.value = 'active';
                }
                directionClassName.value = `carousel-item-${props.direction === 'next' ? 'start' : 'end'}`;
            }, 0);
            carouselItemRef.value.addEventListener('transitionstart', () => {
                setAnimating(true);
            });
            carouselItemRef.value.addEventListener('transitionend', () => {
                setAnimating(false);
                if (active) {
                    directionClassName.value = '';
                    orderClassName.value = '';
                    activeClassName.value = 'active';
                }
                if (!active) {
                    directionClassName.value = '';
                    orderClassName.value = '';
                    activeClassName.value = '';
                }
            });
        });
        return () => vue.h('div', {
            class: [
                'carousel-item',
                activeClassName.value,
                directionClassName.value,
                orderClassName.value,
            ],
            ref: carouselItemRef,
        }, slots.default && slots.default());
    },
});

exports.CCarouselItem = CCarouselItem;
//# sourceMappingURL=CCarouselItem.js.map
