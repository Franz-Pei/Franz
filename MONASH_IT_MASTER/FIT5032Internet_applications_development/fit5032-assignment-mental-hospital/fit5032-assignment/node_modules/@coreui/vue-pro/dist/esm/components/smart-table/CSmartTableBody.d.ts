import { PropType } from 'vue';
import type { Column, Item } from './types';
declare const CSmartTableBody: import("vue").DefineComponent<{
    clickableRows: BooleanConstructor;
    columnNames: {
        type: PropType<string[]>;
        default: () => never[];
        require: boolean;
    };
    columns: {
        type: PropType<(Column | string)[]>;
        default: () => never[];
        require: boolean;
    };
    currentItems: {
        type: PropType<Item[]>;
        default: () => never[];
    };
    firstItemOnActivePageIndex: {
        type: NumberConstructor;
        require: boolean;
        default: number;
    };
    noItemsLabel: StringConstructor;
    scopedSlots: ObjectConstructor;
    selectable: BooleanConstructor;
    selected: PropType<Item[]>;
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("rowChecked" | "rowClick")[], "rowChecked" | "rowClick", import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    clickableRows: BooleanConstructor;
    columnNames: {
        type: PropType<string[]>;
        default: () => never[];
        require: boolean;
    };
    columns: {
        type: PropType<(Column | string)[]>;
        default: () => never[];
        require: boolean;
    };
    currentItems: {
        type: PropType<Item[]>;
        default: () => never[];
    };
    firstItemOnActivePageIndex: {
        type: NumberConstructor;
        require: boolean;
        default: number;
    };
    noItemsLabel: StringConstructor;
    scopedSlots: ObjectConstructor;
    selectable: BooleanConstructor;
    selected: PropType<Item[]>;
}>> & {
    onRowChecked?: ((...args: any[]) => any) | undefined;
    onRowClick?: ((...args: any[]) => any) | undefined;
}, {
    columns: (string | Column)[];
    clickableRows: boolean;
    columnNames: string[];
    currentItems: Item[];
    firstItemOnActivePageIndex: number;
    selectable: boolean;
}, {}>;
export { CSmartTableBody };
